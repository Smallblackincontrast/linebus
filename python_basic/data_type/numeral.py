if __name__ == '__main__':
    # 整数 python2中,整数运算依然是整数, python3改变了这一点
    result = 5 / 2
    print(result)

    # 浮点数
    # 浮点数计算为什么不精确? 因为二进制和十进制转换
    inexact_floating_point_number = 0.2 + 0.1
    print("0.2 + 0.1 = " + str(inexact_floating_point_number))

'''
我们来试一试如何表达十进制的 0.2 吧。
0.01  = 1/4  = 0.25  ,太大
0.001 =1/8 = 0.125 , 又太小
0.0011   = 1/8 + 1/16 = 0.1875 , 逼近0.2了
0.00111 = 1/8 + 1/16 + 1/32 = 0.21875  , 又大了
0.001101 = 1/8+ 1/16 + 1/64 = 0.203125  还是大
0.0011001 = 1/8 + 1/16 + 1/128 =  0.1953125  这结果不错
0.00110011 = 1/8+1/16+1/128+1/256 = 0.19921875
已经很逼近了， 就这样吧。 
'''
